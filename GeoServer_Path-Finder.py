import argparse
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def check_directory_access(hosts, directory_path, output_file):
    for host in hosts:
        url = host + directory_path
        try:
            response = requests.get(url, verify=False)
            if response.status_code == 200:
                with open(output_file, 'a') as file:
                    file.write(url + '\n')
                print(f"Directory found: {url}")
            else:
                print(f"Directory not found: {url}")
        except requests.exceptions.RequestException as e:
            print(f"Error occurred while accessing {url}: {e}")

# Create command-line argument parser
parser = argparse.ArgumentParser(description='Check directory access on specified hosts')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-l', '--hosts-file', help='File containing list of hosts')
group.add_argument('-u', '--hosts', nargs='+', help='List of hosts separated by space')
parser.add_argument('-o', '--output-file', help='Output file to save accessible directories')

# Parse the command-line arguments
args = parser.parse_args()

# Get the hosts and output file from arguments
hosts = args.hosts or []
hosts_file = args.hosts_file
output_file = args.output_file

if hosts_file:
    with open(hosts_file, 'r') as file:
        hosts.extend([line.strip() for line in file.readlines()])

if not hosts:
    print('No hosts provided.')
    exit()

if not output_file:
    output_file = 'accessible_directories.txt'

directory_path = '/geoserver/ows?service=WFS&version=1.0.0&request=GetCapabilities'
check_directory_access(hosts, directory_path, output_file)
